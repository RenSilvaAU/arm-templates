{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "17277793070204216233"
    }
  },
  "parameters": {
    "acssku": {
      "type": "string",
      "defaultValue": "standard",
      "metadata": {
        "description": "The pricing tier of the search service you want to create (for example, basic or standard)."
      },
      "allowedValues": [
        "free",
        "basic",
        "standard",
        "standard2",
        "standard3",
        "storage_optimized_l1",
        "storage_optimized_l2"
      ]
    },
    "replicaCount": {
      "type": "int",
      "defaultValue": 1,
      "maxValue": 12,
      "minValue": 1,
      "metadata": {
        "description": "Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier)."
      }
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        3,
        4,
        6,
        12
      ],
      "metadata": {
        "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units."
      }
    },
    "hostingMode": {
      "type": "string",
      "defaultValue": "default",
      "allowedValues": [
        "default",
        "highDensity"
      ],
      "metadata": {
        "description": "Applicable only for SKUs set to standard3. You can set this property to enable a single, high density partition that allows up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU."
      }
    },
    "name": {
      "type": "string",
      "defaultValue": "[last(split(resourceGroup().id, '/'))]",
      "metadata": {
        "description": "Specifies the name of the deployment."
      }
    },
    // "environment": {
    //   "type": "string",
    //   "defaultValue": "[format('aml-env-{0}', last(split(resourceGroup().id, '/')))]",
    //   "metadata": {
    //     "description": "Specifies the name of the environment."
    //   }
    // },
    "location": {
      "type": "string",
      "defaultValue": "francecentral",
      "allowedValues": [
        "australiaeast",
        "brazilsouth",
        "canadacentral",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "francecentral",
        "japaneast",
        "koreacentral",
        "northcentralus",
        "northeurope",
        "southeastasia",
        "southcentralus",
        "uksouth",
        "westcentralus",
        "westus",
        "westus2",
        "westeurope",
        "usgovvirginia"
      ],
      "metadata": {
        "description": "Specifies the location of the Azure AI | Machine Learning Studio workspace and dependent resources."
      }
    },
      "aoai_Location": {
      "type": "string",
      "defaultValue": "australiaeast",
      "allowedValues": [
        "australiaeast",
        "canadaeast",
        "eastus",
        "eastus2",
        "francecentral",
        "japaneast",
        "northcentralus",
        "westeurope"
      ],
      "metadata": {
        "description": "Specifies the location of the Azure AI | Machine Learning Studio workspace and dependent resources."
      }
    }
  },
  "variables": {
    "tenantId": "[subscription().tenantId]",
    "storageAccountName": "[format('st{0}', parameters('name'))]",
    "keyVaultName": "[format('kv-{0}', parameters('name'))]",
    "applicationInsightsName": "[format('appi-{0}', parameters('name'))]",
    "workspaceName": "[format('amlw-{0}', parameters('name'))]",
    "aoaiAccountName":"[format('aoai-{0}', parameters('name'))]",
    "acsAccountName":"[format('acs-{0}', parameters('name'))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "keyVaultId": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
    "applicationInsightId": "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2020-08-01",
      "name": "[variables('acsAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('acssku')]"
      },
      "properties": {
        "replicaCount": "[parameters('replicaCount')]",
        "partitionCount": "[parameters('partitionCount')]",
        "hostingMode": "[parameters('hostingMode')]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2022-12-01",
      "name": "[variables('aoaiAccountName')]",
      "location": "[parameters('aoai_Location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "customSubDomainName": "[variables('aoaiAccountName')]",
        "networkAcls": {
          "defaultAction": "Allow",
          "virtualNetworkRules": [],
          "ipRules": []
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_RAGRS"
      },
      "kind": "StorageV2",
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "defaultAction": "Deny"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[variables('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "accessPolicies": [],
        "enableSoftDelete": true
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('workspaceName')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[parameters('location')]",
      "properties": {
        "friendlyName": "[variables('workspaceName')]",
        "storageAccount": "[variables('storageAccountId')]",
        "keyVault": "[variables('keyVaultId')]",
        "applicationInsights": "[variables('applicationInsightId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    }
  ]
}